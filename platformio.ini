; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = espressif8266
board = nodemcuv2 # v3? 
framework = arduino
board_build.filesystem = littlefs
lib_ldf_mode = chain+

upload_port = COM13 # change me as neccessary

monitor_port = ${env.upload_port}
monitor_speed = 115200
monitor_filters =
	esp8266_exception_decoder
	send_on_enter
	default
monitor_echo = yes
monitor_eol = LF

[env:esp8266]
build_type = release

[env:esp8266_debug]
build_type = debug
build_flags =
	${env.build_flags}
	-DENABLE_GDB

debug_tool = custom
debug_server =
	${platformio.packages_dir}/toolchain-xtensa/bin/xtensa-lx106-elf-gdb
debug_load_mode = modified
debug_load_cmds = preload
debug_init_cmds =
	# Override some PlatformIO stuff
	define pio_reset_run_target
		delete breakpoints
		continue
	end
	define pio_reset_halt_target
	end
	define pio_restart_target
	end
	# Recommended settings by GDBStub library for Arduino core for ESP8266
	set remote hardware-breakpoint-limit 1
	set remote hardware-watchpoint-limit 1
	set remote interrupt-on-connect on
	set remote kill-packet off
	set remote symbol-lookup-packet off
	set remote verbose-resume-packet off
	mem 0x20000000 0x3fefffff ro cache
	mem 0x3ff00000 0x3fffffff rw
	mem 0x40000000 0x400fffff ro cache
	mem 0x40100000 0x4013ffff rw cache
	mem 0x40140000 0x5fffffff ro cache
	mem 0x60000000 0x60001fff rw
	# No need to add Added by default by PlatformIO
	#file ${platformio.build_dir}/${this.__env__}/firmware.elf 
	# Serial baud rate (assuming same as serial monitor speed)
	set serial baud ${env.monitor_speed}
	# Connect to the device
	target remote $DEBUG_PORT
	# Due to weird PlatformIO GDB handling for embedded, it continues on first 
	# breakpoint by default if `debug_init_break` is set, so let's set it here.
	#tbreak loop
debug_init_break = # empty, use `debug_init_cmds`
debug_port = \\.\${env.monitor_port} # can't be just `COM13`
